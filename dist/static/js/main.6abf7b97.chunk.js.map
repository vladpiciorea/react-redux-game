{"version":3,"sources":["components/layout/SingedInLinks.js","store/actions/authActions.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ScoreSummary.js","components/projects/ScoreList.js","components/projects/dodgy/components/Board.js","components/projects/dodgy/helpers/utils.js","components/projects/dodgy/components/DebugState.js","components/projects/dodgy/components/Square.js","components/projects/dodgy/components/Enemy.js","components/projects/dodgy/helpers/constants.js","components/projects/dodgy/components/Player.js","components/projects/dodgy/components/GameInfo.js","components/dashboard/Modal.js","store/actions/scoreActions.js","components/projects/dodgy/containers/Game.js","components/dashboard/Dashboard.js","components/auth/SignIn.js","components/auth/SignUp.js","components/layout/Footer.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/scoreReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","id","className","onClick","to","profile","initials","state","firebase","links","uid","alt","src","isLoaded","Notifications","notifications","map","notification","key","user","content","moment","time","toDate","fromNow","ScoreSummary","highScore","title","authorFirstName","authorLastName","createdAt","calendar","ScoreList","highScores","itemScore","style","dimension","dim","width","height","border","position","margin","overflow","background","boxShadow","Board","children","pluck","arr","Math","floor","random","length","styles","top","left","DebugState","obj","data","JSON","stringify","size","backgroundColor","color","transition","Square","Enemy","this","playerPosition","info","onCollide","Component","UP","DOWN","LEFT","RIGHT","Player","handleKeyDown","e","newDirection","keyCode","dir","handlePlayerMovement","ref","n","player","window","onkeydown","GameInfo","timeElapsed","playerScore","globalHighScore","container","textAlign","display","flexFlow","justifyContent","Modal","handleChange","setState","target","value","handleSubmit","preventDefault","createScore","createProject","M","init","onOpenStart","onOpenEnd","onCloseStart","onCloseEnd","inDuration","outDuration","opacity","dismissible","startingTop","endingTop","data-target","onSubmit","htmlFor","onChange","project","score","firestore","getFirestore","projects","oldHightScore","doc","highScoreId","authorId","update","collection","Date","catch","err","add","firstName","lastName","getDefaultState","boardSize","playerSize","half","board","maxDim","positions","enemies","enemySpeed","enemyIndex","activeEnemies","baseScore","Game","placeEnemy","playerPos","side","newEnemy","generateNewEnemy","concat","dirObj","handlePlayerCollision","resetGame","startGame","enemyInterval","setInterval","updateEnemyPositions","timeInterval","updateGame","gameInterval","updateEnemiesInPlay","updateTimeAndScore","incrementEnemySpeed","incrementActiveEnemies","filter","enemy","remove","parseFloat","toFixed","debug","clearInterval","updateGlobalHighScore","handleDebugToggle","checked","fetchGlobalHighScore","maxWidth","Dashboard","compose","ordered","firestoreConnect","orderBy","limit","SignIn","email","password","signIn","authError","creds","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","resp","set","App","path","component","exact","Boolean","location","hostname","match","initState","authReducer","action","console","log","message","scoreReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6abf7b97.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport {signOut} from \"../../store/actions/authActions\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\nconst SingedInLinks = (props) => {\r\n    return (\r\n        <ul id=\"nav-mobile\" className=\"right\">\r\n            <li>\r\n                <span className='waves-effect waves-light black-text btn lime accent-2 lighten-1' onClick={props.signOut}>Log Out</span>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/' className='btn btn-floating pink lighten-1'> {props.profile.initials}</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n};\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         authError: state.auth.authError\r\n//     }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SingedInLinks);\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        // make async call to database\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch(err => {\r\n            dispatch({ type: 'LOGIN_ERROR' }, err);\r\n        });\r\n    }\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut()\r\n        .then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        })\r\n    }\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err});\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport SingedInLinks from \"./SingedInLinks\";\r\n\r\nimport {connect} from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n    const {auth, profile } = props;\r\n\r\n    const links = auth.uid  ? <SingedInLinks profile={profile} /> : null;\r\n    return auth.uid  ?\r\n        <div>\r\n            <nav className=\"nav-wrapper deep-purple darken-3\">\r\n                <Link to='/'>   <img className='logoAuth' alt='logo' src='./img/westcasino-logo-143x60-01.svg'/></Link>\r\n                {auth.isLoaded && links ? <SingedInLinks profile={profile} />  : null}\r\n            </nav>\r\n        </div>\r\n        : null;\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from \"react\";\r\nimport moment from 'moment'\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return(\r\n        <div className='section'>\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications Live</span>\r\n                    <ul className='notifications'>\r\n                        {notifications && notifications.map(notification => {\r\n                            return (\r\n                                <li key={notification.id}>\r\n                                    <span className=\"pink-text\">{notification.user}</span>\r\n                                    <span> {notification.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(notification.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Notifications;","import React from \"react\";\r\nimport moment from 'moment'\r\n\r\nconst ScoreSummary = ({highScore}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{highScore.title}</span>\r\n                <p>Posted by {highScore.authorFirstName} {highScore.authorLastName} <span className='right btn-floating btn-large waves-effect waves-light red'>{highScore.highScore} P</span></p>\r\n                <p className=\"grey-text\">{moment(highScore.createdAt.toDate()).calendar()} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ScoreSummary;","import React from \"react\";\r\nimport ScoreSummary from \"./ScoreSummary\";\r\n\r\nconst ScoreList = ({highScores}) => {\r\n    return(\r\n        <div className='project-list section'>\r\n            {highScores && highScores.map(itemScore => {\r\n                return (\r\n                    <div key={itemScore.id}>\r\n                        <ScoreSummary highScore={itemScore} key={itemScore.id}/>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ScoreList;","import React from 'react';\n\nconst style = (dimension) => {\n    const dim = dimension + 'px';\n    return {\n        width: dim,\n        height: dim,\n        border: '1px solid black',\n        position: 'relative',\n        margin: '25px auto',\n        overflow: 'hidden',\n        background: '#eeff41',\n        boxShadow: '10px 10px 5px 0px rgba(0,0,0,0.75)'\n    };\n};\n\nconst Board = ({ dimension, children }) => (\n    <div style={style(dimension)}>\n        {children}\n    </div>\n)\n\nexport default Board","import React from 'react';\n\nexport const puke = (obj) => <pre>{JSON.stringify(obj, null, 2)}</pre>;\nexport const pluck = (arr) => arr[Math.floor(Math.random() * arr.length)];","import React from 'react';\nimport { puke } from '../helpers/utils';\n\nconst styles = { position: 'fixed', top: 0, left: 16 };\n\nconst DebugState = ({ data }) => <div style={styles}>{puke(data)}</div>\n\nexport default DebugState","import React from 'react';\n\nconst style = ({ size, position, color }) => {\n    const dim = size + 'px';\n    return {\n        width: dim,\n        height: dim,\n        backgroundColor: color,\n        position: 'absolute',\n        top: position.top + 'px',\n        left: position.left + 'px',\n        transition: 'all 0.1s ease'\n    };\n};\nconst Square = (props) => <div style={style(props)}/>;\n\nexport default Square","import React, { Component } from 'react';\nimport  Square from './Square';\n\nclass Enemy extends Component {\n    componentDidUpdate() {\n        const { size, playerPosition, info: { top, left }} = this.props;\n        \n        if ( playerPosition.left < (left + size) && \n             playerPosition.top  < (top + size)  &&\n            (playerPosition.left + size) > left &&\n            (playerPosition.top  + size) > top) {\n            \n            this.props.onCollide()\n        }\n    }\n\n    render() {\n        const { size, info: { top, left }} = this.props;\n        \n        return (\n            <Square \n                size={size}\n                position={{ top, left }}\n                color='firebrick' />\n        );\n    }\n}\n\nexport default Enemy;","export const UP = 'UP';\nexport const DOWN = 'DOWN';\nexport const LEFT = 'LEFT';\nexport const RIGHT = 'RIGHT';","import React, { Component } from 'react';\nimport Square from './Square';\nimport { UP, DOWN, LEFT, RIGHT } from '../helpers/constants'\n\nclass Player extends Component {    \n    handleKeyDown = (e) => {\n        let newDirection;\n        \n        switch(e.keyCode) {\n            case 37:\n                newDirection = { top: 0, left: -1 , dir: LEFT};\n                break;\n            case 38:\n                newDirection = { top: -1, left: 0 , dir: UP};\n                break;\n            case 39:\n                newDirection = { top: 0, left: 1, dir: RIGHT};\n                break;\n            case 40:\n                newDirection = { top: 1, left: 0, dir: DOWN };\n                break;\n            default:\n                return;\n        }\n\n        this.props.handlePlayerMovement(newDirection);\n    }\n    \n    render() {        \n        const { size, position: { top, left }} = this.props;\n        \n        return (\n            <div ref={ n => { this.player = n }} >\n                <Square \n                    size={size}\n                    position={{ top, left }}\n                    color='darkgray' />\n            </div>\n            \n        );\n    }\n    \n    componentDidMount() {\n        window.onkeydown = this.handleKeyDown;\n    }\n}\nexport default Player;","import React from 'react';\n\nconst style = () => {\n    return {\n        container: {\n            textAlign: 'center'\n        },\n        info: {\n            display: 'flex',\n            flexFlow: 'row nowrap',\n            justifyContent: 'space-around'\n        }\n    };\n};\n\nconst GameInfo = ({\n    timeElapsed,\n    playerScore,\n    highScore,\n    globalHighScore = 'Loading...'\n}) => {\n    const { container, info } = style();\n    return (\n        <div style={container}>\n            <h3>Use arrows to move.</h3>\n            <div style={info}>\n                <p>Time: {timeElapsed}</p>\n                <p>Score: {playerScore}</p>\n            </div>\n            <div style={info}>\n                <p>High Score: {highScore}</p>\n                <p>Global High Score: {globalHighScore}</p>\n            </div>\n        </div>\n    )\n};\n\nexport default GameInfo;","import React, { Component } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport {createScore} from \"../../store/actions/scoreActions\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        const options = {\r\n            onOpenStart: () => {\r\n                // console.log(\"Open Start\");\r\n            },\r\n            onOpenEnd: () => {\r\n                // console.log(\"Open End\");\r\n            },\r\n            onCloseStart: () => {\r\n                // console.log(\"Close Start\");\r\n            },\r\n            onCloseEnd: () => {\r\n                // console.log(\"Close End\");\r\n            },\r\n            inDuration: 250,\r\n            outDuration: 250,\r\n            opacity: 0.5,\r\n            dismissible: false,\r\n            startingTop: \"4%\",\r\n            endingTop: \"10%\"\r\n        };\r\n        M.Modal.init(this.Modal, options);\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {highScore} = this.props;\r\n        const createScore = {\r\n                ...this.state,\r\n                highScore\r\n        };\r\n        this.props.createProject(createScore);\r\n    };\r\n\r\n\r\n    render() {\r\n        const {highScore} = this.props;\r\n        return (\r\n            <div>\r\n                <p className=\"waves-effect waves-light btn modal-trigger\"\r\n                    data-target=\"modal1\">\r\n                    Save High Score\r\n                </p>\r\n\r\n                <div\r\n                    ref={Modal => {\r\n                        this.Modal = Modal;\r\n                    }}\r\n                    id=\"modal1\"\r\n                    className=\"modal\"\r\n                >\r\n                    {/* If you want Bottom Sheet Modal then add\r\n                        bottom-sheet class to the \"modal\" div\r\n                        If you want Fixed Footer Modal then add\r\n                        modal-fixed-footer to the \"modal\" div*/}\r\n                    <div className=\"modal-content\">\r\n                        <h4>High Score is {highScore}</h4>\r\n                        <form onSubmit={this.handleSubmit} className='white'>\r\n                            <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"title\">Title</label>\r\n                                <input type=\"text\" id='title' onChange={this.handleChange}/>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <button className=\"btn pink lighten-1 z-depth-0 modal-close\">Save</button>\r\n                                <button className=\"modal-close waves-effect waves-red btn-flat\">\r\n                                    Disagree\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createScore(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Modal);\r\n","export const createScore = (score) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n        // make async call to database\r\n\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const uid = getState().firebase.auth.uid;\r\n        const highScores = getState().firestore.data.projects;\r\n        let oldHightScore = null;\r\n        let doc = '';\r\n        for(let highScoreId in highScores) {\r\n\r\n            if(highScores[highScoreId].authorId === uid){\r\n                doc = highScoreId;\r\n                oldHightScore = highScores[highScoreId]\r\n            }\r\n        }\r\n        if(oldHightScore){\r\n            //Upadate\r\n            firestore.update({ collection: 'projects', doc: doc }, {\r\n                ...score,\r\n                createdAt: new Date()\r\n            }).then(() => {\r\n                dispatch({ type: 'CREATE_SCORE_SUCCESS' });\r\n            }).catch(err => {\r\n                dispatch({ type: 'CREATE_SCORE_ERROR' }, err);\r\n            });\r\n        }else{\r\n            firestore.collection('projects').add({\r\n                ...score,\r\n                authorFirstName: profile.firstName,\r\n                authorLastName: profile.lastName,\r\n                authorId: uid,\r\n                createdAt: new Date()\r\n            }).then(() => {\r\n                dispatch({ type: 'CREATE_SCORE_SUCCESS' });\r\n            }).catch(err => {\r\n                dispatch({ type: 'CREATE_SCORE_ERROR' }, err);\r\n            });\r\n        }\r\n    }\r\n};","import React, { Component } from 'react';\nimport Board from '../components/Board';\nimport DebugState from '../components/DebugState';\nimport Enemy from '../components/Enemy';\nimport Player from '../components/Player';\nimport GameInfo from '../components/GameInfo';\n\nimport { UP, DOWN, LEFT, RIGHT } from '../helpers/constants';\nimport { pluck } from '../helpers/utils';\nimport Modal from \"../../../dashboard/Modal\";\n\n\nconst getDefaultState = ({ boardSize, playerSize, highScore = 0 }) => {\n    const half = Math.floor(boardSize / 2) * playerSize;\n    return {\n        size: {\n            board: boardSize,\n            player: playerSize,\n            maxDim: boardSize * playerSize\n        },\n        positions: {\n            player: {\n                top: half,\n                left: half\n            },\n            enemies: []\n        },\n        playerScore: 0,\n        highScore,\n        timeElapsed: 0,\n        enemySpeed: 5,\n        enemyIndex: 0,\n        activeEnemies: 1,\n        baseScore: 10\n    }\n};\n\nexport default class Game extends Component {\n    constructor(props) {\n        super(props);\n        const { boardSize, playerSize } = props;\n        this.state = getDefaultState({ boardSize, playerSize })\n    }\n    \n    placeEnemy = () => {\n        // enemies always launch at player\n        const { player, maxDim } = this.state.size;\n        const { player: playerPos } = this.state.positions;\n\n        // assign to a random side\n        const side = pluck([UP, DOWN, LEFT, RIGHT]);\n\n        // generate enemy object\n        const newEnemy = this.generateNewEnemy(playerPos, side);\n\n        // add new enemy to state\n        this.setState({\n            positions: {\n                ...this.state.positions,\n                enemies: [...this.state.positions.enemies].concat(newEnemy)\n            }\n        });\n    }\n\n    generateNewEnemy = (position, side) => {\n        this.setState({\n            enemyIndex: this.state.enemyIndex + 1\n        });\n\n        const newEnemy = { key: this.state.enemyIndex, dir: side };\n        const { maxDim, player } = this.state.size;\n\n        switch(side) {\n            case UP:\n                newEnemy.top = maxDim;\n                newEnemy.left = position.left;\n                break;\n            case DOWN:\n                newEnemy.top = 0 - player;\n                newEnemy.left = position.left;\n                break; \n            case LEFT:\n                newEnemy.top = position.top;\n                newEnemy.left = maxDim;\n                break;\n            case RIGHT:\n                newEnemy.top = position.top;\n                newEnemy.left = 0 - player;\n                break;\n        }\n\n        return newEnemy;\n    }\n\n    handlePlayerMovement = (dirObj) => {\n        const { top, left } = this.state.positions.player;\n        const { player, maxDim } = this.state.size;\n        \n        // check walls\n        switch (dirObj.dir) {\n            case UP:\n                if (top === 0) return;\n                break;\n            case DOWN:\n                if (top === maxDim - player) return;\n                break;\n            case LEFT:\n                if (left === 0) return;\n                break;\n            case RIGHT:\n                if (left === maxDim - player) return;\n                break;\n        }\n        \n        this.setState({\n            positions: {\n                ...this.state.positions,\n                player: {\n                    top: top + (player * dirObj.top),\n                    left: left + (player * dirObj.left)\n                }\n            }\n        });\n    }\n\n    handlePlayerCollision = () => {\n        this.resetGame();\n    }\n\n    startGame = () => {\n        this.enemyInterval = setInterval(this.updateEnemyPositions, 50);\n        this.timeInterval = setInterval(this.updateGame, 1000);\n        this.gameInterval = setInterval(this.updateEnemiesInPlay, 250);\n    }\n\n    updateGame = () => {\n        const { timeElapsed } = this.state;\n\n        this.updateTimeAndScore();\n\n        if (timeElapsed > 0) {\n\n            // increment enemy speed\n            if (timeElapsed % 3 === 0) {\n                this.incrementEnemySpeed();\n            }\n\n            // increment max active enemies every 10 seconds\n            if (timeElapsed % 10 === 0) {\n                this.incrementActiveEnemies();\n            }\n        }\n    }\n\n    updateEnemyPositions = () => {\n        const { enemySpeed, positions: { enemies }, size: { player, maxDim }} = this.state;\n\n        this.setState({\n            positions: {\n                ...this.state.positions,\n                enemies: enemies.filter(enemy => !enemy.remove).map(enemy => {\n                    if (enemy.top < (0 - player) || \n                        enemy.top > maxDim + player || \n                        enemy.left < (0 - player) || \n                        enemy.left > maxDim + player ) {\n                        enemy.remove = true;\n                        return enemy;\n                    }\n\n                    // based on direction, increment the correct value (top / left)\n                    switch(enemy.dir) {\n                        case UP: \n                            enemy.top -= enemySpeed;\n                            break;\n                        case DOWN: \n                            enemy.top += enemySpeed;\n                            break;\n                        case LEFT:\n                            enemy.left -= enemySpeed;\n                            break;\n                        case RIGHT:\n                            enemy.left += enemySpeed;\n                            break;\n                    }\n\n                    return enemy;\n                })\n            }\n        });\n    }\n\n    updateEnemiesInPlay = () => {\n        const { activeEnemies } = this.state;\n        const { enemies } = this.state.positions;\n\n        if (enemies.length < activeEnemies) {\n            this.placeEnemy();\n        }\n    }\n\n    updateTimeAndScore = () => {\n        const { timeElapsed, playerScore, baseScore } = this.state;\n\n        this.setState({\n            timeElapsed: timeElapsed + 1,\n            playerScore: playerScore + baseScore,\n        });\n    }\n\n    incrementEnemySpeed = () => {\n        const { enemySpeed } = this.state;\n\n        this.setState({\n            enemySpeed: parseFloat((enemySpeed + 0.25).toFixed(2))\n        });\n    }\n\n    incrementActiveEnemies = () => {\n        this.setState({\n            activeEnemies: this.state.activeEnemies + 1\n        });\n    }\n\n    resetGame = () => {\n        const { boardSize, playerSize } = this.props;\n        const { playerScore, highScore, globalHighScore, debug } = this.state;\n        \n        // clear intervals\n        clearInterval(this.gameInterval); \n        clearInterval(this.enemyInterval);\n        clearInterval(this.timeInterval);\n\n        // if high score is higher than global high score, update it\n        if (playerScore > globalHighScore) {\n            this.updateGlobalHighScore(playerScore);\n        }\n\n        // reset state\n        this.setState({\n            ...getDefaultState({ boardSize, playerSize, highScore }),\n            // persist debug state and high scores\n            debug,\n            highScore: playerScore > highScore ? playerScore : highScore,\n            globalHighScore\n        });\n        // restart game\n        this.startGame();\n\n    }\n\n    handleDebugToggle = () => {\n        this.setState({\n            debug: this.debug.checked\n        });\n    }\n\n    fetchGlobalHighScore = () => {\n        // axios.get(url)\n        //     .then(data => {\n        //         this.setState({\n        //             globalHighScore: data.data.fields.global_high_score\n        //         })\n        //     })\n        //     .catch(err => console.warn(err))\n    }\n\n    updateGlobalHighScore = (highScore) => {\n        // axios.patch(url, {\n        //     \"fields\": {\n        //         \"global_high_score\": highScore\n        //     }\n        // })  \n        // .then(data => {\n        //     this.setState({\n        //         globalHighScore: data.data.fields.global_high_score\n        //     });\n        // })\n        // .catch(err => console.warn(err))\n    }\n\n    style = () => {\n        return {\n            width: '85%',\n            maxWidth: '600px',\n            margin: '0 auto'\n        };\n    }\n    \n    render() {\n        let {\n            size: { board, player },\n            positions: { player: playerPos },\n            playerScore,\n            timeElapsed,\n            highScore,\n            globalHighScore\n        } = this.state;\n\n        return (\n            <div style={this.style()}>\n                <GameInfo\n                    playerScore={playerScore}\n                    timeElapsed={timeElapsed}\n                    highScore={highScore}\n                    globalHighScore={globalHighScore} />\n\n                <Board dimension={board * player}>\n                    <Player\n                        size={25}\n                        position={playerPos}\n                        handlePlayerMovement={this.handlePlayerMovement} />\n\n                    {\n                        this.state.positions.enemies.map(enemy =>\n                            <Enemy key={enemy.key}\n                                size={25}\n                                info={enemy}\n                                playerPosition={playerPos}\n                                onCollide={this.handlePlayerCollision} />\n                        )\n                    }\n                </Board>\n                <div className='center'>\n                    <Modal highScore={this.state.highScore} />\n                </div>\n                {false && <p style={{ position: 'fixed', bottom: 0, left: 16 }}>Debug: <input type=\"checkbox\" onChange={this.handleDebugToggle} ref={ n => this.debug = n }/></p>}\n                {this.state.debug && <DebugState data={this.state} />}\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        this.startGame();\n        this.fetchGlobalHighScore();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.gameInterval);\n        clearInterval(this.state.enemyInterval);\n        clearInterval(this.state.timeInterval);\n    }\n}","import React, {Component} from 'react';\r\nimport Notifications from \"./Notifications\";\r\nimport ScoreList from \"../projects/ScoreList\";\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Game from \"../projects/dodgy/containers/Game\";\r\n\r\nclass Dashboard extends Component{\r\n    render() {\r\n        const { highScores, auth, notifications } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>;\r\n\r\n        return (\r\n            <div className='dashboard container'>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <Game boardSize={11} playerSize={25} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                        <ScoreList highScores={highScores}/>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        highScores: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects',orderBy: ['createdAt', 'desc']},\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard)","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Link, Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component{\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    };\r\n\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>;\r\n\r\n        return (\r\n            <div className='container'>\r\n                <Link className=\"btn-floating btn-large waves-effect waves-light red right\" to='/signup'>\r\n                    <i className=\"material-icons\">add</i>\r\n                </Link>\r\n                <form onSubmit={this.handleSubmit} className='white'>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn deep-purple darken-3 z-depth-0\">Login</button>\r\n                    </div>\r\n\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p>: null}\r\n                    </div>\r\n                    <div className=\"center\">\r\n                        <img className='logoAuth' alt='logo' src='./img/westcasino-logo-143x60-01.svg'/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport {signUp} from \"../../store/actions/authActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass SignUp extends Component{\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    };\r\n\r\n    render() {\r\n        const { auth, authError} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>;\r\n\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className='white'>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id='firstName' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id='lastName' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn deep-purple darken-3 z-depth-0\">Sign Up</button>\r\n                        <Link className=\"right\" to='/signin'>\r\n                            <p>Sign In <i className=\"material-icons\">arrow_forward</i></p>\r\n                        </Link>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>: null }\r\n                        </div>\r\n                        <div className=\"center\">\r\n                            <img className='logoAuth' alt='logo' src='./img/westcasino-logo-143x60-01.svg'/>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Footer = (props) => {\r\n    const {auth } = props;\r\n\r\n    return auth.uid  ?\r\n        <footer className=\"page-footer \">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col l6 s12\">\r\n                        <h5 className=\"white-text\">Free Games</h5>\r\n                        <p className=\"grey-text text-lighten-4\">Play the most beautiful game :).</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer-copyright deep-purple darken-3\">\r\n                <div className=\"container\">\r\n                    © 2014 Copyright Piciorea Vladut\r\n                </div>\r\n            </div>\r\n        </footer>\r\n        : null;\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Footer);","import React from 'react';\nimport{ BrowserRouter  as Router, Route, Switch } from 'react-router-dom'\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from './components/dashboard/Dashboard'\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport Footer from \"./components/layout/Footer\";\n\nfunction App() {\n  return (\n      <Router>\n        <div className=\"App\">\n            <Navbar/>\n\n            <Switch>\n                <Route path='/' component={Dashboard} exact></Route>\n                <Route path='/signin' component={SignIn}></Route>\n                <Route path='/signup' component={SignUp}></Route>\n            </Switch>\n            <Footer/>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...state, authError: 'Login failed'\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            return {\r\n                ...state, authError: null\r\n            };\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('sign out')\r\n            return {\r\n                ...state, authError: null\r\n            };\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('SIGNUP out')\r\n            return state;\r\n        case 'SIGNUP_ERROR':\r\n            console.log('SIGNUP out')\r\n            return {\r\n                ...state, authError: action.err.message\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst scoreReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_SCORE_SUCCESS':\r\n            return state;\r\n        case 'CREATE_SCORE_ERROR':\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default scoreReducer;","import authReducer from'./authReducer';\r\nimport scoreReducer from './scoreReducer';\r\nimport {combineReducers} from 'redux';\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: scoreReducer,\r\n    firebase: firebaseReducer, // sync auth\r\n    firestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, createFirestoreInstance, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase} from 'react-redux-firebase'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst config = {\n    apiKey: \"AIzaSyBP8hBnLJ8lN9MFb5cK7rTgoNa7NVjskuA\",\n    authDomain: \"game-site-d46c1.firebaseapp.com\",\n    databaseURL: \"https://game-site-d46c1.firebaseio.com\",\n    projectId: \"game-site-d46c1\",\n    storageBucket: \"game-site-d46c1.appspot.com\",\n    messagingSenderId: \"35595920511\",\n    appId: \"1:35595920511:web:ba7edd45c11cd183818b4a\",\n    measurementId: \"G-NBF9V390BH\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({});\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebase)\n    ));\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance // <- needed if using firestore\n}\nReactDOM.render(<Provider store={store}><ReactReduxFirebaseProvider {...rrfProps}><App /></ReactReduxFirebaseProvider></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}